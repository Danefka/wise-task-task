syntax = "proto3";

package ru.leti.wise.task.task;

import "task.proto";
import "google/protobuf/empty.proto";

service TaskService {
  rpc GetTask(GetTaskRequest) returns (GetTaskResponse);
  rpc GetAllTask(google.protobuf.Empty) returns (GetAllTaskResponse);
  rpc DeleteTask(DeleteTaskRequest) returns (google.protobuf.Empty);
  rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse);
  rpc UpdateTask(UpdateTaskRequest) returns (UpdateTaskResponse);
  rpc SolveTask(SolveTaskRequest) returns (SolveTaskResponse);
  rpc GetTaskSolution(GetTaskSolutionRequest) returns (GetTaskSolutionResponse);
  rpc GetAllTaskSolutions(GetAllTaskSolutionsRequest) returns (GetAllTaskSolutionsResponse);
  rpc GetUserSolutionStatistic(GetUserSolutionStatisticRequest) returns (GetUserSolutionStatisticResponse);
  rpc CreateCatalog(CreateCatalogRequest) returns (CreateCatalogResponse);
  rpc DeleteCatalog(DeleteCatalogRequest) returns (google.protobuf.Empty);
  rpc UpdateCatalog(UpdateCatalogRequest) returns (UpdateCatalogResponse);
  rpc GetCatalog(GetCatalogRequest) returns (GetCatalogResponse);
  rpc GetAllCatalogs(google.protobuf.Empty) returns (GetAllCatalogsResponse);
}

message CreateCatalogRequest {
  Catalog catalog = 1;
}

message CreateCatalogResponse {
  Catalog catalog = 1;
}

message UpdateCatalogRequest {
  Catalog catalog = 1;
}

message UpdateCatalogResponse {
  Catalog catalog = 1;
}

message GetCatalogRequest {
  string id = 1;
}

message DeleteCatalogRequest {
  string id = 1;
}

message GetCatalogResponse {
  Catalog catalog = 1;
}

message GetAllCatalogsResponse {
  repeated Catalog catalog = 1;
}

message GetTaskRequest {
  string id = 1;
}

message GetTaskResponse {
  Task task = 1;
}

message GetAllTaskResponse {
  repeated Task task = 1;
}

message DeleteTaskRequest {
  string id = 1;
}

message CreateTaskRequest {
  Task task = 1;
}

message CreateTaskResponse {
  Task task = 1;
}

message UpdateTaskRequest {
  Task task = 1;
}

message UpdateTaskResponse {
  Task task = 1;
}

message SolveTaskRequest {
  Solution solution = 1;
}

message SolveTaskResponse {
  Solution solution = 1;
}

message GetTaskSolutionRequest {
  string id = 1;
}

message GetTaskSolutionResponse {
  Solution solution = 1;
}

message GetAllTaskSolutionsRequest {
  string task_id = 1;
  string author_id = 2;
}

message GetAllTaskSolutionsResponse {
  repeated Solution solution = 1;
}

message GetUserSolutionStatisticRequest {
  string author_id = 1;
}

message GetUserSolutionStatisticResponse {
  repeated Solution solution = 1;
}